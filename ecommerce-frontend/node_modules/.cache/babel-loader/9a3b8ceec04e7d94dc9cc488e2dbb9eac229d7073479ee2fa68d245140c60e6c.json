{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api'; // Update with your backend URL\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const productAPI = {\n  getAll: () => api.get('/products'),\n  getById: id => api.get(`/products/${id}`),\n  create: product => api.post('/products', product),\n  update: (id, product) => api.put(`/products/${id}`, product),\n  delete: id => api.delete(`/products/${id}`)\n};\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData)\n};\nexport const orderAPI = {\n  create: order => api.post('/orders', order),\n  getByUser: userId => api.get(`/orders/user/${userId}`),\n  getById: id => api.get(`/orders/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","productAPI","getAll","get","getById","id","product","post","update","put","delete","authAPI","login","credentials","register","userData","orderAPI","order","getByUser","userId"],"sources":["C:/Users/Lenovo/Downloads/Ecommerce website/ecommerce-frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api'; // Update with your backend URL\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add auth token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('authToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const productAPI = {\r\n  getAll: () => api.get('/products'),\r\n  getById: (id) => api.get(`/products/${id}`),\r\n  create: (product) => api.post('/products', product),\r\n  update: (id, product) => api.put(`/products/${id}`, product),\r\n  delete: (id) => api.delete(`/products/${id}`),\r\n};\r\n\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n};\r\n\r\nexport const orderAPI = {\r\n  create: (order) => api.post('/orders', order),\r\n  getByUser: (userId) => api.get(`/orders/user/${userId}`),\r\n  getById: (id) => api.get(`/orders/${id}`),\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,UAAU,GAAG;EACxBC,MAAM,EAAEA,CAAA,KAAMb,GAAG,CAACc,GAAG,CAAC,WAAW,CAAC;EAClCC,OAAO,EAAGC,EAAE,IAAKhB,GAAG,CAACc,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAC3Cf,MAAM,EAAGgB,OAAO,IAAKjB,GAAG,CAACkB,IAAI,CAAC,WAAW,EAAED,OAAO,CAAC;EACnDE,MAAM,EAAEA,CAACH,EAAE,EAAEC,OAAO,KAAKjB,GAAG,CAACoB,GAAG,CAAC,aAAaJ,EAAE,EAAE,EAAEC,OAAO,CAAC;EAC5DI,MAAM,EAAGL,EAAE,IAAKhB,GAAG,CAACqB,MAAM,CAAC,aAAaL,EAAE,EAAE;AAC9C,CAAC;AAED,OAAO,MAAMM,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKxB,GAAG,CAACkB,IAAI,CAAC,aAAa,EAAEM,WAAW,CAAC;EAC5DC,QAAQ,EAAGC,QAAQ,IAAK1B,GAAG,CAACkB,IAAI,CAAC,gBAAgB,EAAEQ,QAAQ;AAC7D,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG;EACtB1B,MAAM,EAAG2B,KAAK,IAAK5B,GAAG,CAACkB,IAAI,CAAC,SAAS,EAAEU,KAAK,CAAC;EAC7CC,SAAS,EAAGC,MAAM,IAAK9B,GAAG,CAACc,GAAG,CAAC,gBAAgBgB,MAAM,EAAE,CAAC;EACxDf,OAAO,EAAGC,EAAE,IAAKhB,GAAG,CAACc,GAAG,CAAC,WAAWE,EAAE,EAAE;AAC1C,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}