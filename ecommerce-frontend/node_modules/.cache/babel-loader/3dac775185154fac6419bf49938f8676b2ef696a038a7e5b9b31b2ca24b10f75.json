{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\Ecommerce website\\\\ecommerce-frontend\\\\src\\\\context\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const saved = localStorage.getItem('darkMode');\n    return saved ? JSON.parse(saved) : false;\n  });\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n\n    // Apply dark mode class to body and html\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark-mode');\n      document.body.classList.add('dark-mode');\n      document.documentElement.setAttribute('data-dark-mode', 'true');\n    } else {\n      document.documentElement.classList.remove('dark-mode');\n      document.body.classList.remove('dark-mode');\n      document.documentElement.removeAttribute('data-dark-mode');\n    }\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"KbHdrrAoZRLBZOn1S0FfhNT8E8k=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDarkMode","setIsDarkMode","saved","localStorage","getItem","JSON","parse","setItem","stringify","document","documentElement","classList","add","body","setAttribute","remove","removeAttribute","toggleTheme","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/Ecommerce website/ecommerce-frontend/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const saved = localStorage.getItem('darkMode');\r\n    return saved ? JSON.parse(saved) : false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\r\n    \r\n    // Apply dark mode class to body and html\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark-mode');\r\n      document.body.classList.add('dark-mode');\r\n      document.documentElement.setAttribute('data-dark-mode', 'true');\r\n    } else {\r\n      document.documentElement.classList.remove('dark-mode');\r\n      document.body.classList.remove('dark-mode');\r\n      document.documentElement.removeAttribute('data-dark-mode');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACjD,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,KAAK;EAC1C,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACR,UAAU,CAAC,CAAC;;IAE5D;IACA,IAAIA,UAAU,EAAE;MACdS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MACnDH,QAAQ,CAACI,IAAI,CAACF,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MACxCH,QAAQ,CAACC,eAAe,CAACI,YAAY,CAAC,gBAAgB,EAAE,MAAM,CAAC;IACjE,CAAC,MAAM;MACLL,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACI,MAAM,CAAC,WAAW,CAAC;MACtDN,QAAQ,CAACI,IAAI,CAACF,SAAS,CAACI,MAAM,CAAC,WAAW,CAAC;MAC3CN,QAAQ,CAACC,eAAe,CAACM,eAAe,CAAC,gBAAgB,CAAC;IAC5D;EACF,CAAC,EAAE,CAAChB,UAAU,CAAC,CAAC;EAEhB,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACxBhB,aAAa,CAACiB,IAAI,IAAI,CAACA,IAAI,CAAC;EAC9B,CAAC;EAED,oBACEvB,OAAA,CAACC,YAAY,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,UAAU;MAAEiB;IAAY,CAAE;IAAAnB,QAAA,EACvDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACzB,EAAA,CA9BWF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAgC1B,OAAO,MAAM6B,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGrC,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACgC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}