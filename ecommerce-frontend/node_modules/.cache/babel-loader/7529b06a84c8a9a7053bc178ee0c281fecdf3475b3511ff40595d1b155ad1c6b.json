{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\Ecommerce website\\\\ecommerce-frontend\\\\src\\\\context\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      return savedTheme === 'dark';\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark-mode');\n    } else {\n      document.documentElement.classList.remove('dark-mode');\n    }\n  }, [isDarkMode]);\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = e => {\n      if (!localStorage.getItem('theme')) {\n        setIsDarkMode(e.matches);\n      }\n    };\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"MFgQa08eJw/c/sGSrejnYzdZXbI=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","window","matchMedia","matches","setItem","document","documentElement","classList","add","remove","mediaQuery","handleChange","e","addEventListener","removeEventListener","toggleTheme","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/Ecommerce website/ecommerce-frontend/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme) {\r\n      return savedTheme === 'dark';\r\n    }\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\r\n    \r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark-mode');\r\n    } else {\r\n      document.documentElement.classList.remove('dark-mode');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const handleChange = (e) => {\r\n      if (!localStorage.getItem('theme')) {\r\n        setIsDarkMode(e.matches);\r\n      }\r\n    };\r\n\r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => mediaQuery.removeEventListener('change', handleChange);\r\n  }, []);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACjD,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACd,OAAOA,UAAU,KAAK,MAAM;IAC9B;IACA,OAAOG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;EAClE,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACdc,YAAY,CAACK,OAAO,CAAC,OAAO,EAAER,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;IAE5D,IAAIA,UAAU,EAAE;MACdS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IACrD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IACxD;EACF,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhBX,SAAS,CAAC,MAAM;IACd,MAAMyB,UAAU,GAAGT,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;IACpE,MAAMS,YAAY,GAAIC,CAAC,IAAK;MAC1B,IAAI,CAACb,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;QAClCH,aAAa,CAACe,CAAC,CAACT,OAAO,CAAC;MAC1B;IACF,CAAC;IAEDO,UAAU,CAACG,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IACnD,OAAO,MAAMD,UAAU,CAACI,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBlB,aAAa,CAACmB,IAAI,IAAI,CAACA,IAAI,CAAC;EAC9B,CAAC;EAED,oBACE7B,OAAA,CAACC,YAAY,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,UAAU;MAAEmB;IAAY,CAAE;IAAArB,QAAA,EACvDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC3B,GAAA,CAxCWF,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}